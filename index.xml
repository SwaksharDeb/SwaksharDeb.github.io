<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Swakshar Deb</title><link>https://swakshardeb.github.io/</link><atom:link href="https://swakshardeb.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Swakshar Deb</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate><image><url>https://swakshardeb.github.io/media/logo_hubd3c58adc3395bc4e72f95cd1008d304_22046_300x300_fit_lanczos_3.png</url><title>Swakshar Deb</title><link>https://swakshardeb.github.io/</link></image><item><title>Example Talk</title><link>https://swakshardeb.github.io/talk/example-talk.html</link><pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/talk/example-talk.html</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click on the &lt;strong>Slides&lt;/strong> button above to view the built-in slides feature.
&lt;/div>
&lt;/div>
&lt;p>Slides can be added in a few ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create&lt;/strong> slides using Wowchemy&amp;rsquo;s &lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">&lt;em>Slides&lt;/em>&lt;/a> feature and link using &lt;code>slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong> an existing slide deck to &lt;code>static/&lt;/code> and link using &lt;code>url_slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Embed&lt;/strong> your slides (e.g. Google Slides) or presentation video on this page using &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">shortcodes&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Further event details, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">page elements&lt;/a> such as image galleries, can be added to the body of this page.&lt;/p></description></item><item><title>I have successfuly defended my M.Sc. Thesis</title><link>https://swakshardeb.github.io/news/2023-phd-offer.html</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/news/2023-phd-offer.html</guid><description>&lt;p>&lt;strong>Topic.&lt;/strong> The title of my M.Sc. thesis was &lt;strong>&amp;quot; Empowering Graph Wavelet Convolution for
Node Classification: A Novel Approach with
Local Lifting Scheme&amp;quot;&lt;/strong>. In this thesis work we focused to the phenomenon of production of undesirable wavelet filters within graph wavelet based neural networks and presented a solution framework to overcome this phenemonenon with with our proposed Tree Lifting Scheme.&lt;/p>
&lt;p>&lt;strong>Summary.&lt;/strong> Wavelet-based graph neural networks have received increasing attention in various graph machine learning tasks. However, in node classification, existing graph wavelet-based methods are limited in their ability to generalize to arbitrary graphs due to their implementation of predefined wavelet filters with inherent homophilic assumptions while ignoring heterophily. Recent studies have attempted to address this issue through a wavelet lifting transform that requires the bipartite graph, therefore, altering the graph topology, and leading to undesirable wavelet filters. In this thesis, we introduce a novel class of graph wavelet neural network based on our proposed tree-lifting scheme that is able to learn adaptive wavelet filters over arbitrary graphs. Our proposed generalized adaptive graph wavelet network (GA-GWNN) preserves the graph topology through computation trees while implementing the lifting scheme on arbitrary graph structures. Additionally, we concentrate on the local substructure as an acyclic tree while implementing the lifting strategy locally. Moreover, this locally defined lifting scheme incorporates and fuses both high-pass and low-pass frequency components to enhance the feature representation. We further benchmark our proposed GA-GWNN model with three homophilic datasets (Cora, Citeseer, PubMed), and four heterophilic datasets (Film, Cornell, Texas, Wisconsin) and to demonstrate the scalability of our proposed GA-GWNN we evaluated our model on two large-scale datasets namely, Ogbn-Arxiv and Ogbn-Products. In addition, we further introduce a more scaleable and computationally efficient version of GA-GWNN, namely simple and efficient adaptive graph wavelet neural network (SEA-GWNN).
SEA-GWNN incorporates higher-order neighborhoods to extract multiscale information and implements the lifting scheme without the need for an inverse transform. Additionally, SEA-GWNN introduces an attention detachment strategy, enabling the computation of attention parameters only once and re-utilizing them in successive layers, thus making SEA-GWNN more scalable compared to GA-GWNN. Finally, we benchmark this proposed SEA-GWNN on nine real-world homophilic and heterophilic datasets from three categories (i.e., citation, webpage, and film industry graphs) and four large-scale graphs, including Ogbn-Arxiv, Arxiv, Genius, and Penn94. The experimental results from these datasets demonstrate the effectiveness of our method.&lt;/p>
&lt;p>&lt;strong>Future Direction.&lt;/strong> This work presents Generalized Adaptive Wavelet Network that extends the vanilla lifting scheme on any arbitrary graph thus producing an adaptive graph wavelet based on the signal residing on the graph. &lt;em>(1)&lt;/em> Extending the work on this topic is an attempt to further reduce the computation cost associated with tree lifting structures. This approach will result in a more fine-grained rehab system. &lt;em>(2)&lt;/em> One can generalize the proposed framework into many other sectors. For example, the novelty of our framework also can be extended to human activity recognition, augmented reality, gaming, driving, etc. where designing wavelet filters based on the task at hand is crucial. &lt;em>(3)&lt;/em> Taking one step further, one can extend this proposed fusion model with a learnable aggregation function, where instead of aggregating with a fixed set of edge weights (fixed normalized adjacency matrix), one can learn these edge weights with an attention-based network. But one needs to be careful about the over-parametrization of the entire framework. &lt;em>(4)&lt;/em> From the theoretical viewpoint, one can further study the effect of over-smoothing on our proposed network. This may result in further analysis of the effect of our two-channel filter bank that was learned through successive lifting structures. This can be observed with the help of the node profile, that analysis the node behavior at each layer.&lt;/p></description></item><item><title>Our project "IHABOT" accepted for the prestigious Centennial Research Grant.</title><link>https://swakshardeb.github.io/news/2023-ihabot_news.html</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/news/2023-ihabot_news.html</guid><description>&lt;p>Very fortunate to be a part of the IHABOT project, where I was in a team that designed an interactive human-computer interface that collects the RGBD data of the rehabilitation patients with Microsoft Kinectv2 and provide real-time exercise correctness score.&lt;/p></description></item><item><title>Our Stroke Rehabilitation research project accepted for the goverment grant from ICT Ministry, Bangladesh</title><link>https://swakshardeb.github.io/news/2023-cnrs_start.html</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/news/2023-cnrs_start.html</guid><description>&lt;p>In this project, I&amp;rsquo;ve been hired as a full time research assistant.&lt;/p></description></item><item><title>Our Undergraduation dissertation has been presented at CVPR'22, WiCV Workshop</title><link>https://swakshardeb.github.io/news/2022-cvpr_wicv.html</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/news/2022-cvpr_wicv.html</guid><description>&lt;p>Our undergraduate disertation project titled&amp;quot;An Intelligent Agent for Evaluating and Guiding the Post-Stroke Rehabilitation Exercises&amp;quot;, have been presented in the &lt;em>CVPR'22&lt;/em>, &lt;em>WiCV Workshop&lt;/em>, New Orleans, Louisiana .&lt;/p></description></item><item><title>Research Assistantship Under Dr. Sejuti Rahman</title><link>https://swakshardeb.github.io/news/2023-ra_offer.html</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/news/2023-ra_offer.html</guid><description>&lt;p>I&amp;rsquo;ve been hired as a full time research assistant under Dr. Sejuti Rahmna.&lt;/p></description></item><item><title>AI-Driven Stroke Rehabilitation Systems and Assessment: A Systematic Review</title><link>https://swakshardeb.github.io/publication/2022-tnsre_survey.html</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/publication/2022-tnsre_survey.html</guid><description>&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./img/rehab_survey.PNG" alt="gemm_architecture" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p style="text-align:center"> Figure: A comparative overview between traditional vs automated
post-stroke rehabilitation systems. &lt;/p></description></item><item><title>Data-augmentation for Bangla-English Code-Mixed Sentiment Analysis: Enhancing Cross Linguistic Contextual Understanding</title><link>https://swakshardeb.github.io/publication/2023-nlp_access.html</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/publication/2023-nlp_access.html</guid><description>&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./img/nlp.PNG" alt="gemm_architecture" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p style="text-align:center"> Figure: (a) Proposed data augmentation process with multiple sampling rates. For simplicity, we only showed sampling rate 1 and 2 in the above diagram. (b) Illustration of word embedding training process. We augment input data with several sampling rate.
(c) Training the classifier using learned word embedding. &lt;/p></description></item><item><title>GEMM: A Graph Embedded Model for Memorability Prediction</title><link>https://swakshardeb.github.io/publication/2023-gemm_memorability.html</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/publication/2023-gemm_memorability.html</guid><description>&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/62146852/232325513-e9de077e-49d3-4ce0-b090-6360054c55ca.png" alt="gemm_architecture" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p style="text-align:center"> Figure: The GEMM Architecture. &lt;/p></description></item><item><title>Graph Convolutional Networks for Assessment of Physical Rehabilitation Exercises</title><link>https://swakshardeb.github.io/publication/2022-stgcn_rehab.html</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/publication/2022-stgcn_rehab.html</guid><description>&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./img/stgcn_architecture.PNG" alt="Rehab Architecture" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p style="text-align:center"> Figure: GCN based end-to-end models using (a-b) vanilla STGCN and (c-d) extended STGCN for rehabilitation exercise assessment. &lt;/p></description></item><item><title>Connection, Parallel Transport and Geodesis</title><link>https://swakshardeb.github.io/blog/parallel-transport.html</link><pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/blog/parallel-transport.html</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>A vector $\mathbf{X}$ is a direactional derivative acting on $f \in C^{\infty}(M)$ as $\mathbf{X}: f \to \mathbf{X}[f]$. However, there is no direactional derivative acting on a tensor field of type $(p,q)$, which arises naturally from the differential structure $M$. What we need is an extra structure called the connection, which specify how tensors are transported along a curve.&lt;/p>
&lt;h1 id="covariant-derivative">Covariant Derivative&lt;/h1>
&lt;p>We first give a heuristic approach to parallel transport and covariant derivatives. As we have noted several times, two vectors defined at different points can not be compared naively with each other since they belongs to different vector spaces, even though they may share the same chart $(U,\phi)$. Keeping this in mind, let us see how the derivative of a vector field in a Euclidean space $\mathbb{R}^m$ is defined, where $m$ is the dimension o fthe manifold. The derivative of a vector field $V = v^u e_u$, where $e_u = \frac{\partial}{\partial x^u}$, with respect to $x^v$ has the $u$-th component.&lt;/p>
&lt;p>$$\frac{\partial v^u}{\partial x^v} = \lim_{\Delta x \to 0} \frac{V^u(\ldots,x^v+\Delta x^v,\ldots)}{\Delta x^v}$$&lt;/p>
&lt;p>Here, $V^u(\ldots, x^v+\Delta x^v, \ldots)$ is the $u$-th component of the vector field $V$ at point $(\ldots, x^v+\Delta x^v, \ldots)$ and $V^u(\ldots, x^v, \ldots)$ is the $u$-th component of that vector field, $V$, at point $x$. To substract $V^u(x)$ from $V^u(x+\Delta x)$, we have to transport $V^u(x)$ to the point $x+\Delta x$ without change and compute the difference. This transport of a vector is called a &lt;em>Parallel Transport&lt;/em>.&lt;/p>
&lt;p>&lt;strong>Definition&lt;/strong>: Parallel transport maps a vector $X$ at point $p$ that lives on a vector space $T_{p}M$ to a vector $Y$ at point $q$ that lives on a vector space $T_{q}M$, mathematically represented as $X \in T_{p}M \to Y \in T_{q}M$.&lt;/p>
&lt;p>Intituively, this definition of the parallel transport represents the corresponding vector of $X \in T_pM$ in the vector space $T_qM$. Bascially it is a way of moving a vector over the manifold $M$.&lt;/p>
&lt;p>While defining this parallel transport, we have implicitly assumed that $V\vert_x$ parallel transported to $x+\Delta x$ has the same component $V^{u}(x)$. However, there is no natural way to parallel transport a vector in a manifold and we have to specify &lt;em>&amp;ldquo;how it is parallel transported&amp;rdquo;&lt;/em> from one point to other. Let $\tilde{V}\vert_{x+\Delta x}$ denote a vector $V\vert_x$ parallel transported to $x+\Delta x$. We demand that the components satisfy:&lt;/p>
&lt;p>$$
\begin{align}
\tilde{V}^{u}(x+\Delta x) - V^u(x) &amp;amp;\propto \Delta x \nonumber \
\widetilde{(V^u + W^u)}(x+\Delta x) &amp;amp;= \tilde{V}(x+\Delta x) + \tilde{W}^u(x+\Delta x) \nonumber
\end{align}
$$&lt;/p>
&lt;p>These condition are satisfy if we take:
$$
\begin{align}
\tilde{V}^u(x+\Delta x) = V^{u}(x) \Gamma_{v\lambda}^u (x) \Delta x^v
\end{align}
$$&lt;/p>
&lt;p>where, $x^v=x^v\vert_{x+\Delta x} - \tilde{x}^v\vert_{x+\Delta x}$. The covariant derivative of a vector with respect to $x^v$ is defined by:
$$
\begin{align}
&amp;amp;\lim_{\Delta x^v \to 0} \frac{V^{u}(x+\Delta x)-\tilde{V}^u(x+\Delta x)}{\Delta x^v} \frac{\partial}{\partial x^u} \nonumber \&lt;/p>
&lt;p>&amp;amp;=\lim_{\Delta x^v \to 0} \frac{V^{u}(x+\Delta x)-V^u(x)-V^{\lambda}(x)\Gamma^{u}_{v\lambda}\Delta x^v}{\Delta x^v} \frac{\partial}{\partial x^u} \nonumber \&lt;/p>
&lt;p>&amp;amp;=(\frac{\partial V^u}{\partial x^v} + V^{\lambda}\Gamma_{v\lambda}^u) \frac{\partial}{\partial x^u} \nonumber \&lt;/p>
&lt;p>&amp;amp;= (\nabla_{\frac{\partial}{\partial x^v}} V)^u
\end{align}
$$&lt;/p>
&lt;p>Here, $(\nabla_{e_v} V)^u$ represents the $u$-th component of the covariant derivative along the $e_v$ direaction at point $x+\Delta x$ and the $\nabla$ denotes &lt;em>connection&lt;/em>, which will be covered later. The quantity in Eqn $(2)$ is a vector at $x+\Delta x$ since, it is a difference of two vectors $V\vert_{x+\Delta x}$ and $\tilde{V}\vert_{x+\Delta x}$ defined at the same point $x+\Delta x$. There are many distinct rules of parallel transport possible, one for each choice of $\Gamma$. If the manifold is endowed with the metric, there exist a predefined choice of $\Gamma$, called Levi Civita Connection.&lt;/p>
&lt;h1 id="affine-connection">Affine Connection&lt;/h1>
&lt;p>&lt;strong>Definition:&lt;/strong> An affine connection $\nabla$ is a map: $\chi (M) \times \chi(M) \to \chi(M)$, or $(X,Y) \to \nabla_{X}Y$ which satisfy the following conditions:
$$
\begin{align}
&amp;amp;\nabla_{X}(Y+Z) = \nabla_{X}Y + \nabla_{X}Z \nonumber \
&amp;amp;\nabla_{X+Y}(Z) = \nabla_{X}Z + \nabla_{Y}Z \nonumber \
&amp;amp;\nabla_{fX}(Y) = f \nabla_{X}Y \nonumber \
&amp;amp;\nabla_{X}(fY) = X[f]Y + f\nabla_{X}Y \nonumber
\end{align}
$$
where, $f \in C^{\infty}(M)$, $\chi(M)$ denotes vector field and $X,Y,Z \in \chi(M)$.&lt;/p>
&lt;p>Take a chart $(U,\phi)$ with the condition $x=\phi(p)$ on $M$, and define $\Gamma_{uv}^\lambda$ called the connection coefficients by:&lt;/p>
&lt;p>$$\nabla_v e_u = \nabla_{e_v} e_u = \nabla_{\frac{\partial}{\partial x^v}} = e_{\lambda} \Gamma_{uv}^\lambda$$&lt;/p>
&lt;p>where, ${e_u} = {\frac{\partial}{\partial x^u}}$ is the cordinate basis in $T_{p}M$. The connection coefficient specify how the basis vectors change from point to point. Let $V=V^ue_u$ and $W = W^ue_v$ be elements of $T_pM$. Then, $\nabla_V W$ is the connection of the vector $W$, at the direaction of the vector $V$. Intuitively, $\nabla_V W$ tells, if we move the vector at $T_pM$ at direction indicated by the vector $V \in T_pM$, what is the difference between vector components and how the basis vector changes. Mathematially,
$$
\begin{align}
\nabla_V W &amp;amp;= \nabla_{V^u e_u} W^v e_v = V^u \nabla_{e_u} W^v + V^u W^v \nabla_{e_u} e_v \nonumber \
&amp;amp;= V^u (\frac{\partial W^\lambda}{\partial x^u}+W^v \Gamma_{uv}^\lambda) e_{\lambda} \nonumber
\end{align}
$$
Thus the $\lambda$-th component of $\nabla_V W$ is defined as:
$$(\nabla_V W)^\lambda = V^u (\frac{\partial W^\lambda}{\partial x^u} + W^v \Gamma_{uv}^{\lambda})$$&lt;/p>
&lt;p>Note that this definition of the connection coefficient is in agreement with the previous heuristic result. By definition, $\nabla$ maps two vectors $V$ and $W$ to a new vector.&lt;/p>
&lt;h1 id="parallel-transport-and-geodesics">Parallel Transport and Geodesics&lt;/h1>
&lt;p>Given a curve in a manifold $M$, we may define the parallel transport of a vector along the curve. Let $c:(a,b) \to M$ be a curve in $M$. For simplicity, we assume a small image is covered by a chart $(U,\phi)$, whoose coordinate is $x=\phi(p)$. Let $X$ be a vector field defined along $c(t)$: $X\vert_{c(t)} = X^u(c(t)) e_u\vert_{c(t)}$, where $e_u = \frac{\partial}{\partial x^u}$. If $X$ satisfies the conidtion: $\nabla_V X = 0$ for any $t \in (a,b)$. $X$ is said to be parallel transported along $c(t)$ and from the chain rule we know, $\frac{d}{dt} = \frac{dx^u(c(t))}{dt} \frac{\partial}{\partial x^u}$, where, $x^u(c(t)) = x^u \circ c$. Thus $V = \frac{d}{dt} = \frac{dx^u(c(t))}{dt} e_u\vert_{c(t)}$ is the tangent vector to $c(t)$. The condition is written as:
$$
\begin{align}
&amp;amp;\nabla_V X = 0 \nonumber \
&amp;amp;V^u \frac{\partial X^u}{\partial x^u} + \Gamma_{uv}^\lambda V^{u} X^{v} = 0 \nonumber \
&amp;amp;\frac{dx^u(c(t))}{dt} \frac{\partial X^{\lambda}}{\partial x^u} + \Gamma_{uv}^{\lambda} V^{u} X^v = 0 \nonumber \
&amp;amp;\frac{dX^\lambda}{dt} + \Gamma^{\lambda}&lt;em>{uv} V^u X^v = 0 \nonumber \
&amp;amp;\frac{dX^\lambda}{dt} + \Gamma^{\lambda}&lt;/em>{uv} \frac{dx^u(c(t))}{dt} X^v = 0 \nonumber
\end{align}
$$
If the tangent vector $v(t)$ itself is parallel transported along $c(t)$, namely if
$$\nabla_V V = 0$$
the curve $c(t)$ is called geodesic. Geodesic are, in a sense, the straighest possible curves in a Reimenian manifold. In components, the geodesic equation becomes:&lt;/p>
&lt;p>$$\frac{d^2x^u}{dt^2} + \Gamma^u_{v\lambda} \frac{dx^v}{dt} \frac{dx^{\lambda}}{dt} = 0$$&lt;/p></description></item><item><title>Actions, not gestures: contextualising embodied controller interactions in immersive virtual reality</title><link>https://swakshardeb.github.io/example/2021-ratcliffe-et-al-actions.html</link><pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2021-ratcliffe-et-al-actions.html</guid><description/></item><item><title>Not Very Effective: Validity Issues of the Effectance in Games Scale</title><link>https://swakshardeb.github.io/example/2021-ballou-et-al-not-very-effective.html</link><pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2021-ballou-et-al-not-very-effective.html</guid><description/></item><item><title>Are You Open? A Content Analysis of Transparency and Openness Guidelines in HCI Journals</title><link>https://swakshardeb.github.io/example/2021-ballou-et-al-are-you-open.html</link><pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2021-ballou-et-al-are-you-open.html</guid><description/></item><item><title>The Hidden Intricacy of Loot Box Design: A Granular Description of Random Monetized Reward Features</title><link>https://swakshardeb.github.io/example/2020-ballou-et-al-hidden.html</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2020-ballou-et-al-hidden.html</guid><description/></item><item><title>Eight-Puzzle Game</title><link>https://swakshardeb.github.io/blog/eight-puzzle-game.html</link><pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/blog/eight-puzzle-game.html</guid><description>&lt;p>This is a JavaScript implementation of the classic 8-puzzle game. I&amp;rsquo;ve also built in an AI to solve the puzzle if you are stuck.&lt;/p>
&lt;h3 id="features">Features&lt;/h3>
&lt;ul>
&lt;li>Uses the A* algorithm to find the shortest way to solve the puzzle&lt;/li>
&lt;li>You can choose any image to show in the tiles. It will replace the numbers though.&lt;/li>
&lt;li>The blank tile can also be controlled using hand gestures. It was trained using supervised learning on a set of over 5000 photos.&lt;/li>
&lt;/ul>
&lt;h3 id="controls">Controls&lt;/h3>
&lt;div style="display:flex">
&lt;div style="flex:1;padding:0 1% 0 0">
&lt;h1>
&lt;div ALIGN=Center>
↑
&lt;/div>
&lt;div ALIGN=Center>
← ↓ →
&lt;/div>
&lt;/h1>
&lt;!-- &lt;h3> -->
&lt;div ALIGN=Center>
Arrow keys
&lt;/div>
&lt;!-- &lt;/h3> -->
&lt;/div>
&lt;div style="flex:1;padding:0 1% 0 0">
&lt;h1>
&lt;div ALIGN=Center>
✋
&lt;/div>
&lt;div ALIGN=Center>
👈 👇 👉
&lt;/div>
&lt;/h1>
&lt;!-- &lt;h3> -->
&lt;div ALIGN=Center>
Hand Gestures (using camera)
&lt;/div>
&lt;!-- &lt;/h3> -->
&lt;/div>
&lt;div style="flex:1;padding:0 1% 0 0">
&lt;h1>
&lt;div ALIGN=Center>
W
&lt;/div>
&lt;div ALIGN=Center>
A S D
&lt;/div>
&lt;/h1>
&lt;!-- &lt;h3> -->
&lt;div ALIGN=Center>
Keyboard keys
&lt;/div>
&lt;!-- &lt;/h3> -->
&lt;/div>
&lt;/div>
&lt;style>
*.videoWrapper {
position: relative;
padding-bottom: 56.25%; /* 16:9 */
height: 0;
}
*.videoWrapper iframe {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
}
*.grid{
display: grid;
place-items:center;
width: 100%;
}
&lt;/style>
&lt;h3 id="game">Game&lt;/h3>
&lt;style> iframe{ border: none; } &lt;/style>
&lt;div class="videoWrapper" style="--aspect-ratio: 3 / 4;">
&lt;iframe
src="https://tahsintariq.github.io/p5js/P5_Sketches/P5_Web_Collection/EightPuzzle"
data-position="center center">
&lt;/iframe>
&lt;/div>
&lt;!-- &lt;div class="videoWrapper" style="--aspect-ratio: 3 / 4;">
&lt;iframe
src="https://tahsintariq.github.io/p5js/P5_Sketches/P5_Web_Collection/EightPuzzle"
data-position="center center">
&lt;/iframe>
&lt;/div> -->
&lt;h3 id="code">Code&lt;/h3>
&lt;p>Here&amp;rsquo;s the code for A* path finding algorithm that solves the puzzle:&lt;/p>
&lt;!-- &lt;div class="alert alert-note">
&lt;div>
A Markdown callout is useful for displaying notices, hints, or definitions to your readers.
&lt;/div>
&lt;/div>
-->
&lt;!-- &lt;style>
@import url('https://cdn.rawgit.com/lonekorean/gist-syntax-themes/848d6580/stylesheets/monokai.css');
@import url('https://fonts.googleapis.com/css?family=Open+Sans');
/* .gist-file */
/* .gist-data {max-height: 700px; max-width: auto;} */
.gistContainer {width: 75%; margin: 0 auto;}
&lt;/style> -->
&lt;!-- &lt;div class = "gistContainer">
&lt;script src="https://gist.github.com/TahsinTariq/5c4ba6b74dd1279f6d4bcfea6a3cbefd.js">&lt;/script>
&lt;/div> -->
&lt;!-- &lt;script src="https://gist.github.com/TahsinTariq/5c4ba6b74dd1279f6d4bcfea6a3cbefd.js">&lt;/script> -->
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">AStar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">function&lt;/span> &lt;span class="nx">route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">parents&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;NONE&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">parents&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v2&lt;/span>&lt;span class="p">])}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">parents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">searched&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fcost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">parents&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;NONE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">queue&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sortProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">queue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">delete&lt;/span> &lt;span class="nx">queue&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">searched&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">node&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">v2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;found&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v2&lt;/span>&lt;span class="p">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">catch&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;No path exists&amp;#39;&lt;/span>&lt;span class="p">);}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hash_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">generatechild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">entries&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">hash_&lt;/span>&lt;span class="p">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">gcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">gcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">searched&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">includes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="k">continue&lt;/span>&lt;span class="p">;}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">gcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">node&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">gcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">h&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">parents&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">node&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hasOwnProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)){&lt;/span>&lt;span class="nx">queue&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fcost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;NO path Found&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!--
&lt;div class="gallery-grid">
&lt;div class="gallery-item gallery-item--medium">
&lt;a data-fancybox="gallery-artworks" href="./media/albums/artworks/ComfyUI_00012_.png" >
&lt;img src="./media/albums/artworks/ComfyUI_00012__huc445cd5ad83025868edfc18b6cc1de2c_1802432_750x750_fit_q75_h2_lanczos_3.webp" loading="lazy" alt="ComfyUI_00012_.png" width="750" height="421">
&lt;/a>
&lt;/div>
&lt;div class="gallery-item gallery-item--medium">
&lt;a data-fancybox="gallery-artworks" href="./media/albums/artworks/ComfyUI_00018_.png" >
&lt;img src="./media/albums/artworks/ComfyUI_00018__hu26bf9a1a94be4fa17eeaa173d2be47a8_1766519_750x750_fit_q75_h2_lanczos_3.webp" loading="lazy" alt="ComfyUI_00018_.png" width="750" height="421">
&lt;/a>
&lt;/div>
&lt;div class="gallery-item gallery-item--medium">
&lt;a data-fancybox="gallery-artworks" href="./media/albums/artworks/ComfyUI_00022_.png" >
&lt;img src="./media/albums/artworks/ComfyUI_00022__hu402c86523824341693e48a5d479aaa85_1796260_750x750_fit_q75_h2_lanczos_3.webp" loading="lazy" alt="ComfyUI_00022_.png" width="750" height="421">
&lt;/a>
&lt;/div>
&lt;div class="gallery-item gallery-item--medium">
&lt;a data-fancybox="gallery-artworks" href="./media/albums/artworks/ComfyUI_00029_.png" >
&lt;img src="./media/albums/artworks/ComfyUI_00029__hu4b2cbb9f7b260be52d9f263b28eb7bc7_1742824_750x750_fit_q75_h2_lanczos_3.webp" loading="lazy" alt="ComfyUI_00029_.png" width="750" height="421">
&lt;/a>
&lt;/div>
&lt;/div> --></description></item><item><title>The relationship between mental well-being and dysregulated gaming: A specification curve analysis of five gaming disorder scales</title><link>https://swakshardeb.github.io/example/2020-ballou-van-rooij-relationship.html</link><pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2020-ballou-van-rooij-relationship.html</guid><description/></item><item><title>The Changing Face of Desktop Video Game Monetisation: An Exploration of Trends in Loot Boxes, Pay to Win, and Cosmetic Microtransactions in the Most-Played Steam Games of 2010-2019</title><link>https://swakshardeb.github.io/example/2019-zendle-et-al-changing-face.html</link><pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2019-zendle-et-al-changing-face.html</guid><description/></item><item><title>Procedural Terrain Generation</title><link>https://swakshardeb.github.io/blog/terrain-generation.html</link><pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/blog/terrain-generation.html</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Creating a terrain manually for a game or just for visualization purposes is a really daunting task. Instead, a better way to do so is to programmatically generate it by passing some parameters to a code. Here, I discuss how to make a procedural terrain generator mostly using processing for python. This can also be done in any other language or game engine or 3D design software. I will be making a simple terrain using height maps for stylized purposes. But, first we need to understand how to generate height maps using perlin noise.&lt;/p>
&lt;p>Perlin noise is a procedurally generated noise texture developed by ken perlin. How perlin noise is generated using code is discussed thoroughly &lt;strong>&lt;a href="https://rtouti.github.io/graphics/perlin-noise-algorithm" target="_blank" rel="noopener">here&lt;/a>&lt;/strong>. I&amp;rsquo;ll be using the built in noise function that generates perlin noise for processing.&lt;/p>
&lt;h3 id="generating-sample-points">Generating sample points&lt;/h3>
&lt;p>In order to render the terrain, we need some geometry. We can generate tile the plane with cubes, but that would look more like minecraft. We could choose randomly generated points. But purely random or even pseudo-random choices have a tendency of clustering together. This phenomenon is known as &lt;a href="https://en.wikipedia.org/wiki/Poisson_clumping" target="_blank" rel="noopener">&lt;code>Poisson Clumping&lt;/code>&lt;/a>. Pure or pseudo-random points are not good choices because of this phenomenon, as shown below.&lt;/p>
&lt;!-- ![Random points](/img/random.png) -->
&lt;figure id="figure-generated-random-points-tend-to-cluster-together">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./img/random.png" alt="Generated random points tend to cluster together." loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
Generated random points tend to cluster together.
&lt;/figcaption>&lt;/figure>
&lt;p>So, instead we use a different sort of random point generation called &lt;strong>&lt;a href="https://en.wikipedia.org/wiki/Supersampling#Poisson_disk" target="_blank" rel="noopener">&lt;code>Poisson Disc Sampling&lt;/code>&lt;/a>&lt;/strong>. This generates random points at a given interval and thus making them more uniform. This is a much better choice for generating terrains.&lt;/p>
&lt;p>Now if we triangulate the points,We should get a plane with enough geometry to offset using the generated height map. I go into some details on triangulation &lt;a href="https://tahsintariq.github.io/triangulation" target="_blank" rel="noopener">&lt;code>here&lt;/code>&lt;/a>. The final result should look something like this (without the animation of course):&lt;/p>
&lt;div class="videoWrapper">
&lt;iframe
src="https://tahsintariq.github.io/p5js/P5_Sketches/P5_Web_Collection/Delunay_triangulation"
data-position="center center">
&lt;/iframe>
&lt;/div>
&lt;h3 id="creating-a-rough-3d-terrain">Creating a rough 3D terrain&lt;/h3>
&lt;p>Now we rotate the canvas on the y-axis so it looks more like a plane.&lt;/p>
&lt;!-- ![Random Plane](/img/random_plane.png) -->
&lt;figure id="figure-the-entire-plane-rotated-along-the-y-axis-to-give-it-a-3d-look">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./img/random_plane.png" alt="The entire plane rotated along the Y-axis to give it a 3D look" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
The entire plane rotated along the Y-axis to give it a 3D look
&lt;/figcaption>&lt;/figure>
&lt;p>Now, using the generated height map, we offset the z-position of the points by the value corresponding to that x and y position in the height map. This gives us a stylized terrain.&lt;/p>
&lt;!-- ![Terrain](/img/terrain.png) -->
&lt;figure id="figure-a-generated-rough-terrain">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./img/terrain.png" alt="A generated rough terrain" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption data-pre="Figure&amp;nbsp;" data-post=":&amp;nbsp;" class="numbered">
A generated rough terrain
&lt;/figcaption>&lt;/figure>
&lt;p>We can change the shape of this terrain by changing the noise using offsets. This can result in traversing through the terrain as if we were flying on top of it, or changing the entire topology of the terrain. It will depend on how the noise is being offset.&lt;/p>
&lt;p>I&amp;rsquo;ve put the processing.py codes for this project &lt;a href="https://github.com/TahsinTariq/Processing/tree/master/Pycessing/Perlin/Terrain_generation" target="_blank" rel="noopener">&lt;code>here&lt;/code>&lt;/a>.&lt;/p>
&lt;h3 id="smoother-surfaces">Smoother surfaces&lt;/h3>
&lt;p>The generated surface is still pretty low resolution and looks pointy. This can be solved in two ways. First, we can either increase the number of points from the poisson disk sampling process. The other method is using the &lt;a href="https://en.wikipedia.org/wiki/Catmull%E2%80%93Clark_subdivision_surface" target="_blank" rel="noopener">&lt;code>Catmull-Clark algorithm&lt;/code>&lt;/a>. This is a technique used in 3D computer graphics to represent curved surfaces by the specification of a coarser polygonal mesh and produced by a recursive algorithmic method.&lt;/p>
&lt;p>Furthermore, the same process can be used to generate terrain in 3D modelling software. The Catmull-Clark algorithm can be used easily here as most software have built in support. The following demonstrates the improvements made while using the algorithm.&lt;/p>
&lt;div style="display:flex">
&lt;div style="flex:1;padding:0 1% 0 0">
&lt;img src="./img/terrain_blend_1.png" alt="coarse" data-position="center center" />
&lt;/div>
&lt;div style="flex:1;padding:0 1% 0 0">
&lt;img src="./img/terrain_blend_2.png" alt="subdivided" data-position="center center" />
&lt;/div>
&lt;/div>
&lt;article class="grid" style="text-align: center;">
The left image shows a coarse pointy surface, the right image shows a smooth, curved, subdivided surface
and below is an animated terrain made in Blender 3D
&lt;/article>
&lt;video controls loop autoplay>
&lt;source src="./img/terrain_vid.mp4">
&lt;/video>
&lt;h3 id="example-videos">Example videos&lt;/h3>
&lt;p>Below are two different renders I&amp;rsquo;ve made using the processing.py. One with a half inverted render and the other colored according to the height of the points i.e. a topological height map.&lt;/p>
&lt;style>
*.videoWrapper {
position: relative;
width:100%;
padding-bottom: 56.25%; /* 16:9 */
height: 0;
}
video{
display:grid;
margin: auto;
width:90%;
height:90%;
}
*.videoWrapper iframe{
position: absolute;
margin:auto;
top: 0; bottom: 0;
left: 0; right: 0;
text-align: center;
width: 90%;
height: 90%;
}
*.grid{
display: grid;
place-items:center;
/* width: 100%; */
}
&lt;/style>
&lt;style> iframe{ border: none; } &lt;/style>
&lt;div class="videoWrapper">
&lt;iframe src="https://www.youtube.com/embed/kLhleR4t7LQ" data-position="center center">
&lt;/iframe>
&lt;/div>
&lt;div class="videoWrapper">
&lt;iframe src="https://www.youtube.com/embed/-vS37cZq3B8" data-position="center center">
&lt;/iframe>
&lt;/div>
&lt;!-- "https://www.youtube.com/embed/kLhleR4t7LQ" -->
&lt;!-- "https://www.youtube.com/embed/-vS37cZq3B8" --></description></item><item><title>The Prevalence of Loot Boxes in Mobile and Desktop Games</title><link>https://swakshardeb.github.io/example/2019-zendle-et-al-prevalence.html</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/example/2019-zendle-et-al-prevalence.html</guid><description/></item><item><title>Game of life in Rust</title><link>https://swakshardeb.github.io/project/game-of-life.html</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/project/game-of-life.html</guid><description>&lt;div class="container-lg">
&lt;div class="col-lg-12">
&lt;h2 class="mt-5 text-left heading-color">Game of life in Rust and Webassembly&lt;/h2>
&lt;p class="text-left">This is an implementation of &lt;a
href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">Conway's Game of Life&lt;/a>. Here I've used
&lt;a href="https://docs.rs/fixedbitset/0.4.0/fixedbitset/">&lt;code>fixedbitset&lt;/code>&lt;/a> to minimize data
transfer between javascript and webassembly.
&lt;/p>
&lt;/div>
&lt;/div>
&lt;div class="container-lg">
&lt;div class="col-lg-12 ">
&lt;div class="mt-5">
&lt;!-- Dropdown HTML -->
&lt;select name="Render Resolution" id="rez">
&lt;option value="" selected="selected">Render Resolution&lt;/option>
&lt;option value="1k">1080p&lt;/option>
&lt;option value="2k">1620p&lt;/option>
&lt;option value="4k">2160p&lt;/option>
&lt;/select>
&lt;!-- dropdown end -->
&lt;div class="text-right col" id="fps">&lt;/div>
&lt;canvas class="col" id="game-of-life">&lt;/canvas>
&lt;/div>
&lt;div class="row px-4 g-2">
&lt;div class="row align-middle col-6 p-3">
&lt;div class="col-2 text-center">Speed&lt;/div>
&lt;div class="col">
&lt;input type="range" min="1" max="10" value="1" class="slider border col" id="range">
&lt;/div>
&lt;/div>
&lt;button class="p-3 col" id="play-pause">&lt;/button>
&lt;button class="p-3 col" id="reset">Reset&lt;/button>
&lt;button class="p-3 col" id="dead">Dead Cells&lt;/button>
&lt;/div>
&lt;h2 class="mt-5 text-left heading-color">Controls&lt;/h2>
&lt;p class="text-left">
Use the slider to control the speed of the game in steps per frame from 1 to 10.
&lt;/p>
&lt;p class="text-left">
Pause, reset the board or kill all the cells in the board with the buttons
&lt;/p>
&lt;p class="text-left">
If you're on a computer,
&lt;ul>&lt;code>CLICK&lt;/code> to toggle the state of a cell.&lt;/ul>
&lt;ul>&lt;code>CTRL+CLICK&lt;/code> to insert a &lt;a
href="https://en.wikipedia.org/wiki/Glider_(Conway%27s_Life)">Glider&lt;/a>.&lt;/ul>
&lt;ul>&lt;code>SHIFT+CLICK&lt;/code> to insert a &lt;a href="https://www.conwaylife.com/wiki/Pulsar">Pulser&lt;/a>.&lt;/ul>
&lt;ul>&lt;code>CTRL+SHIFT+CLICK&lt;/code> to insert &lt;a href="https://conwaylife.com/wiki/Gosper_glider_gun">Gosper's
Glider Gun&lt;/a>.
&lt;/ul>
&lt;/p>
&lt;/div>
&lt;/div></description></item><item><title>Hybrid nanoporous materials for the separation of fluid mixtures</title><link>https://swakshardeb.github.io/project/hybrid-nanoporous-materials.html</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/project/hybrid-nanoporous-materials.html</guid><description>&lt;p>Update will be posted here.&lt;/p></description></item><item><title/><link>https://swakshardeb.github.io/admin.yml</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swakshardeb.github.io/admin.yml</guid><description/></item></channel></rss>